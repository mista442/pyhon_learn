# {} dict - словарь
# словарь хранит данные формата - ключ : значение

# типы данных, которые могут принимать ключ и значение
# key - str,int,double,tuple
# value - str,int,double,tuple,list

#если ключи в словаре повторяются, то берется последнее в словаре значение для данного ключа ("Виктор": 18)
p_ages = {"Андрей": 32, "Виктор": 29, "Максим": 18, "Виктор": 18}
print(p_ages) # {"Андрей": 32, "Виктор": 18, "Максим": 18}

# ключ -2 дублируется, поэтому при выводе словаря - отобразится ключ -2 со значением 8.
p_ages1 = {1:1, -2:3.2, 19.2:1, -2:8, 'hello':10.1, 'test':'rere'}
print(p_ages1) # {1:1, -2:8, 19.2:1, 'hello':10.1, 'test':'rere'}

p_ages2 = {(1,2):"test", 10:5.1,('hello',10,2.2):8}
print(p_ages2)

# в словарь нельзя добавлять листы в качестве ключа, т.к. это изменяемый тип данных
#p_ages3 = {[1,2,3]:'test'}

# но листы можно использовать в качестве значения
p_ages4 = {(1,2,3):['test',1,2.5]}
print(p_ages4)

#------------------------------------------
#словарь состоит из пар ключ:значение, которые отделяются запятыми.
# словари не имеют доступа по индекса как например в типе данных list или tuple.
# вместо этого в словарях можно обращаться получать доступ к элементам по имени ключа словаря. Ключ принимает только неимзенняемые типы данных

print(p_ages["Андрей"]) # отобразить значение ключа "Андрей" - 32
# print(p_ages[32]) # при вводе несуществующщего ключа словаря - программа будет аварийно завершаться. (KeyError: 32)

print(p_ages2[(1,2)]) # отобразить значение ключа (1,2)
print(p_ages2.get(10)) # тоже самое что и print(p_ages2[10])

a = {'test':[1,2,3], 'test2':(10,11,12), 15: 'test3'}
print(a)
print(type(a))

# словари можно делать вложенными друг в друга и записывать столбцом, а не в строку:

floor1 = {
    'Sw0':{
        'vendor':'cisco',
        'mac':'aa-bb-cc',
        'ip':'192.168.88.10',
        'ios':'15.4'
    },
    'Sw1': {
        'mac': 'bb-cc-dd',
        'ip': '192.168.89.10',
        'ios': '15.4',
        'vendor': 'cisco'
    },
    'Sw1': {
        'mac': 'bb-cc-dd',
        'ip': '192.168.89.10',
        'ios': '15.4',
        'vendor': 'cisco'
    }
}

print(floor1) # выводится на экран будет одной строкой.
print(floor1['Sw0']) # #отобразить значение ключа Sw0
print(floor1['Sw0']['ios']) #отобразить значение ключа вложенного словаря
# в переменной floor1, в для ключа Sw0 отобращить значение вложенного включа ios - 15.4

b = {1:10,1:45,2:18,1:33} # ключи словаря могут повторятся

# но при выводе значения повторяющего ключа - отобразится самый последний элемент для этого ключа во всем словаре.
print(b[1]) # 33

#-------------- методы словарей

#------ метод .keys() - возвращает всю ключи словаря
print(floor1.keys()) # dict_keys(['Sw0', 'Sw1'])

#------ метод .items() - возвращает элементы словаря (ключ,значение) в отформатированном виде
print(floor1.items()) # dict_items([('Sw0', {'vendor': 'cisco', 'mac': 'aa-bb-cc', 'ip': '192.168.88.10', 'ios': '15.4'}), ('Sw1', {'mac': 'bb-cc-dd', 'ip': '192.168.89.10', 'ios': '15.4', 'vendor': 'cisco'})])

#------ метод .get() - возвращает значение по ключу элемента

print(floor1.get('Sw0')) # {'vendor': 'cisco', 'mac': 'aa-bb-cc', 'ip': '192.168.88.10', 'ios': '15.4'}
print(floor1['Sw0']) # тоже самое что и строчка выше

#------ метод .clear() - удалить в словаре все элементы - сделать словарь пустым.

с = {1:10,1:45,2:18,1:33}
с.clear()
print(c)