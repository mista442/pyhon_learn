# set {} - множества
# в отличии от словаря где в качестве элемента выступают key:value, в множестве фигурирует только элемент.
# элемент множества может принимать неизменяемые типы данных - int,float,str,tuple
# и во вложенные структуры данных изменяемые типы данных добавлять тоже нельзя

# обычно множества используют для обьдинения общей информации из разных множеств, или нахождения только уникальных элементов между разными множествами

# 1. если в множестве заданы повторяются элементы, то в выводе отобразятся только уникальные элементы.
# 2. элементы множества возвращаются всегда в неупорядоченном виде!

a = {'a','b','c','d','b','c','d'}
print(type(a)) # <class 'set'>

print(a) # {'a', 'b', 'd', 'c'} # или могут вернуть в другом виде

b = {1,'test',(1,"hello"),-2.5,'a','b'}
print(b) # {-2.5, 'test', (1, 'hello'), 1}


# a = {'a','b','c','d','b','c','d'}
a.add('e') # добавить новый элемент в множество
print(a) # {'a', 'e', 'c', 'b', 'd'}

a.discard('c') # удалить из множества указанный элемент
print(a) # {'a', 'e', 'd', 'b'}

c=a|b # объединение множеств a и b
print(c) # {'d', 1, (1, 'hello'), 'e', 'a', 'b', 'test', -2.5}

d=a&b # пересечение - обьединение пересекающийся элементов из указаных множеств
print(d) # {'a', 'b'}

# если пересекающийся множеств нет, то отобразится пустое множество - set()

a1 = {1,2,3,4,5}
b1 = {4,5,6,7,8}
c1 = a1-b1 # из a1 убираем элементы которые есть и в a1 и в b1 и то что осталось ложим в c1
print(c1) # {1, 2, 3}

c2 = b1-a1
print(c2) # {8, 6, 7}

mn1={10,11,'test',45}
mn2={34,43,12,'aaa'}
mn3=mn1-mn2
print(mn3) # ничего не удалится, т.к. пересекающихся элементов нет

